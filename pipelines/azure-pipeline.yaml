name: $(SourceBranchName)-$(Date:yyyyMMdd)-$(Rev:rrr)
trigger: none
variables:
  - name: releaseName
    value: 'inventory-service'

  - name: nexusIQAppId
    value: '' # TO DO

  - name: dockerRegistryUrl
    value: 'fedex.azurecr.io'

  - name: namespace-dev
    value: 'inventory-dev'

  - name: namespace-test
    value: 'inventory-test'

  - name: namespace-stage
    value: 'inventory-stage'

  - name: namespace-prod
    value: 'inventory'

  - name: helmArtifactName
    value: 'inventory-helm'

  - name: fortifyServiceConnectionName
    value: 'fedex-fortify-ssc'

  - name: FortifyAppName
    value: ''  # TO DO

  - name: mavenPool
    value: 'maven-ops-build'

  - name: kubernetesServiceConnectionNonProdDev
    value: 'main-inventory-dev'

  - name: kubernetesServiceConnectionNonProdTest
    value: 'main-inventory-test'

  - name: kubernetesServiceConnectionProdStage
    value: 'main-inventory-stage'

  - name: kubernetesServiceConnectionProd
    value: 'main-inventory'



resources:
  repositories:
    - repository: templates
      type: git
      name: common/azure-pipeline-templates
      ref: master

stages:

  - stage: publishCharts
    displayName: 'publish helm charts'
    jobs:
      - job: publishCharts
        steps:
          - task: PublishPipelineArtifact@1
            displayName: 'Publish helm chart files'
            inputs:
              targetPath: '$(System.DefaultWorkingDirectory)/chart'
              artifact: '$(helmArtifactName)'

  - template: ../build_template/java_build.yaml
    parameters:
      mavenArtifactName: 'target'
      pomFilePath: '$(System.DefaultWorkingDirectory)/pom.xml'
      pool: $(mavenPool)
      appDirectory: '.'
      nexusIQAppId: $(nexusIQAppId)
      nexusIQscan: false #Make it true once NexusIQAppId available

  - stage: fortifyScan
    displayName: "Run Fortify Scan and Publish Results"
    jobs:
      - template: fortify/fortify.yaml@templates
        parameters:
          fortifySourceTranslate: ''
          fortifyBuildId: $(Build.BuildId)
          buildAgentPoolName: fortify-ops-build
          fortifyApplicationName: '3539672_order_cleansing'
          fortifyApplicationVersion: 'dev'
          fortifyServerName: 'fedex-fortify-ssc'
          runFortifyScan: true

  - stage: dockerbuild
    # dependsOn: ['build']
    displayName: 'Docker build'
    condition: succeeded()
    jobs:
      - template: ../build_template/docker_build.yml
        parameters:
          dockerFilePath: '$(System.DefaultWorkingDirectory)/Dockerfile'
          acrServiceConnection: 'fedex-acr'
          acrRepo: $(releaseName)
          mavenArtifactName: 'target'
          pool: $(mavenPool)
          appDirectory: '.'
          pushImage: true


  - stage: DeployDev
    displayName: Deploy to Dev environment
    dependsOn: ['dockerbuild']
    jobs:
      - template: ../templates/deploy.yaml
        parameters:
          mavenPool: $(mavenPool)
          pipelineEnvironment: "Test-App"
          helmArtifactName: $(helmArtifactName)
          kubernetesServiceConnection: $(kubernetesServiceConnectionNonProdDev)
          namespace: $(namespace-dev)
          releaseName: $(releaseName)
          dockerRegistryUrl: $(dockerRegistryUrl)
          environment: "dev"

